alias ls='ls -G'
alias p3='source ~/Documents/penv/venv3/bin/activate'
alias search='echo '.' | xargs grep -n -R -i'
alias rmac="openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'"
alias setmac="sudo ifconfig en0 ether"
alias ut='date +%s'
alias insecure_chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --disable-web-security'

function pb() {
        cat $1 | pbcopy
}

function gitm() {
        git stash
        git checkout master
        git pull
        git stash apply
}

function getdoc() {
	OUTPUT_FILE=$(echo ${1} | sed 's/\//%2f/g')
	curl ${1} > ${OUTPUT_FILE}
}

function ipinfo() {
	curl "ipinfo.io/$1"
	echo
}

function pw() {
        openssl rand -base64 ${1:-48}
}

function eref {
  F=$(find /usr/local/Cellar/erlang/17.0/lib/erlang/lib/ -name ${1})
  less ${F}
}

function docker_clean_everything() {
        # Stop All containers
        docker stop $(docker ps -a -q)
        # Delete all containers
        docker rm $(docker ps -a -q)
        # Delete all images
        docker rmi $(docker images -q)
}

function ta() {
        LAST_NUMBER=$(tail -n1 ~/notes/tasks.note  | cut -d ')' -f 1)
        NEW_NUMBER=$(echo "${LAST_NUMBER:-0} + 1" | bc)
	echo "${NEW_NUMBER}) $@" >> ~/notes/tasks.note
}
function tremove() {
        sed -i '' "/^${1})/d" ~/notes/tasks.note
}
alias ts='cat ~/notes/tasks.note'


alias dbuild='docker build -t `basename $PWD` .'

alias clean_branches='git branch --merged master | grep -v "\* master" | xargs -n 1 git branch -d'

# Quickly navigate to repositories
function r() {
        orgs=$(find ~/src -maxdepth 1 -type d | cut -d '/' -f 5 | sort)
        for org in $orgs; do
                cd ~/src/${org}/${1} 2>/dev/null
                if [ $? -eq 0 ]; then
                        return 0
                fi
        done
}

_r() {
        local cur
        repos=$(find ~/src -maxdepth 2 -type d | cut -d '/' -f 6 | sort)
        COMPREPLY=()
        cur=${COMP_WORDS[COMP_CWORD]}
        COMPREPLY=( $(compgen -W "$repos" -- "$cur") )
        return 0
}
complete -F _r r

function udp() {
        addr=$(echo $1 | cut -d ':' -f 1)
        addr=${addr:-localhost}
        port=$(echo $1 | cut -d ':' -f 2)
        echo -n $2 > /dev/udp/${addr}/${port}
}
